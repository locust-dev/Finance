//
//  VC_Table.swift
//  Finance
//
//  Created by –ò–ª—å—è –¢—é—Ä–∏–Ω on 08.02.2021.
//
import SideMenu
import UIKit

class VC_Table: UITableViewController {
    
    
    var menu: SideMenuNavigationController?
    
    ///–°–¥–µ–ª–∞–ª–∏ –º–∞—Å—Å–∏–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ, –¥–∞–Ω–Ω—ã–µ –±–µ—Ä–µ–º –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö expenses
    var objects = [
        expenses (emoji: "üìù", category: "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã", cost: "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ +"),
        expenses (emoji: "üè°", category: "–î–æ–º", cost: "1500")
    ]

    override func viewDidLoad() {
        super.viewDidLoad()
        
        ///–ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title = "–¢—Ä–∞—Ç—ã"
        
        ///–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Side Menu
        menu = SideMenuNavigationController(rootViewController: RightMenuClass())
        
        SideMenuManager.default.rightMenuNavigationController = menu
        SideMenuManager.default.addPanGestureToPresent(toView: self.view)
        
        ///–ö–Ω–æ–ø–∫–∞ edit (–ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–ª–µ–≤–∞)
        self.navigationItem.leftBarButtonItem = self.editButtonItem
        self.editButtonItem.title = "–†–µ–¥."
        self.editButtonItem.tintColor = UIColor.orange
        
        ///–†–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫
        tableView.rowHeight = 75
    }
    
    ///–ó–∞–¥–∞–µ–º –∞–∫—à–∏–æ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    @IBAction func didTapMenu() {
        present(menu!, animated: true)
    }
    
    ///–î–æ—Å—Ç–∞–µ–º –æ–±—å–µ–∫—Ç—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—å—é
    @IBAction func unwindSegue(segue: UIStoryboardSegue){
        guard segue.identifier == "saveSegue" else {return}
        let sourceVC = segue.source as! VC_category
        let typeOfExpense = sourceVC.typeOfExpense
        
        let newIndexPath = IndexPath(row: objects.count, section: 0)
        objects.append(typeOfExpense)
        tableView.insertRows(at: [newIndexPath], with: .fade)
    }
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    ///–£–∫–∞–∑–∞–ª–∏ —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ –∫–æ–ª-–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return objects.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        ///–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —è—á–µ–π–∫—É –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤ –∫–ª–∞—Å—Å –¥–ª—è –Ω–µ–µ MainTableCell –∏ –∑–∞–¥–∞–≤ –∏–Ω–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        let cell = tableView.dequeueReusableCell(withIdentifier: "mainCell", for: indexPath) as! MainTableCell
        
        ///–í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –æ–±—å–µ–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
        let object = objects[indexPath.row]
        
        ///–ó–∞–ø–æ–ª–Ω—è–µ–º –ª–µ–π–±–ª—ã —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        cell.emojiLabel.text = object.emoji
        cell.catLabel.text = object.category
        cell.costLabel.text = object.cost
        
        return cell
    }
    
    ///–§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã–≤–æ–¥ —Å—Ç–∞–π–ª–∞ –ø–æ –∫–Ω–æ–ø–∫–µ Edit
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        return.delete
    }
    
    ///–î–æ—Å—Ç–∞–µ—Ç –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            objects.remove(at: indexPath.row)
            tableView.deleteRows(at: [indexPath], with: .fade)
        }
    }
}
